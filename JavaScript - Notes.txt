JavaScript - Notes 

Aula 1 - Porque estudar JavaScript?

- Importante linguagem para que o seu conteúde funcione independente do tipo de browser seja exibido. 
- Torna as páginas mais interativas e responsivas para o usuário.
- Linguagem padrão aberto (open source)


Aula 2 - Linguagens e JavaScript

- O JS afeta diretamente o conteúdo do HTML E CSS. 
- Como linguagens de marcação funcionam:
>> O HTML indica/marca onde e o que é cada conteúdo, texto, imagem, audio, etc.
>> o CSS indica/marca como esse conteúde será apresentado para o usuário. 

- As linguagens de programação fornecem instruções para os programas serem executados. Comandam seus comportamentos e suas ações. 
- O JavaScript funciona dentro do browser.
- FontEnd: É o lado do usuario. Client side. Onde JS, HTML e CSS trabalham juntos. 

HTML - Conteúdo - Compreensão do conteúdo e interfere diretamente na ação dos mecanismos de busca.
CSS - Apresentação - Responsável pela formatação da apresentação do conteúdo. 
JS - Comportamento - Adiciona interatividade e controle aos elementos. 

APIs - Pequenos programas que interagem com o JS. Permitem: elementos de geolocalização, controle de audios e vídeos, arrastar objetos, etc. 
>> Formam um núcleo que liga as camadas de marcação, apresentação e HTML. 

- JavaScript é uma Linguagem Orientada a Objetos. Se busca aproximação do mundo fícos real para o abstratos do mundo virtual
- Objetos tem nomes, propriedades e comportamentos. 


Aula 3 - JavaScript e HTML

- <script src="meucodigo.js"></script> (tag usada para inserir um arquivo externo de javascript para dentro do documento HTML)
- <script src="meucodigo.js" async="async"></script> (esse atributo permite que o script funcione de maneira independente do html)

- Scrpit interno é escrito dentro do documento do HTML. Ex: <script> document.write ("Estou escrevendo com JavaScript") </script);


Aula 4 - Lógica de programação e Algorítimos
 
- Conjuntos de intruções que ordenam os passos para realização das tarefas. 
- Funções: 
>>>>> function nomedafuncao(parâmetro){ 
		//aqui é o que a função vai executar (códigos)
	}

Ex: 
<script. 
funciton aviso(){
	alert("Está é uma janela de aviso!")
}
</script> 

-- Chamada de uma função no HTML: 
<body onload="aviso()"> //quando a página carregar(onload), a função 'aviso()' vai ser executada. 

>>> Condicionais <<<

Instrunções que controlam a sequencia de execução do código: 

if
if/else
if/else if
if/else if/else
switch

>> Estrutura de repetição <<
- O loopings são estrutura que permitem a repetição de determinada parte dos códigos.

for 
while

Exemplos: 

var prato = 1

for(prato = 1; prato < 6; prato++) {
	document.write(prato + "<br");
}


while
var bolinho = 2

while(bolinho <= 5){
	document.write(bolinho + "porções" + <br>);
bolinho++;
}

>> Objetos << 
- São os principais tipos de dados na linguagem. 
- Para definitir um objeto é obrigatótio o uso de letra maiúscula. 

Princiais tipos:

Number
String
Boolean
Array

Date - Possível escrever dadas e horários a partir das informações do sistema operacional. 
	new Date()
	Ex: document.write(Date());

Math - Permite a realização de operações matemáticas.
	Ex: Para gerar um número aleatório. 
	
	var aleatório = Math.random()
	document.write(aleatório);


Aula 5 -  Controle sobre o seu Código

-

Aula 6 - Bibliotecas

-

Aula 7 - Plugins

-

Aula 8 - Frameworks

-